{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAZ3B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBc;AACa;AAC2C;AAEtC;AACxB;AAOpC;IAcE,oCAAoC;IAGpC,mBAAmB,OAAsB,EAChC,eAAgC,EAChC,SAA0B,EAAS,IAAoB,EACvD,gBAAkC,EAAS,WAA8B;QAHlF,iBAeC;QAfkB,YAAO,GAAP,OAAO,CAAe;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAiB;QAAS,SAAI,GAAJ,IAAI,CAAgB;QACvD,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,gBAAW,GAAX,WAAW,CAAmB;QAnBlF,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QAC7B,YAAO,GAA2C;YAChD,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,KAAK;SAChB,CAAC;QAeA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;QAEF;;;;WAIG;IAEL,CAAC;IAED,mCAAe,GAAf;QACA,iCAAiC;IACjC,CAAC;IAED,oCAAgB,GAAhB;QACC,+BAA+B;IAEhC,CAAC;IAGD,+CAA+C;IAC/C,2BAAO,GAAP;QAAA,iBAgCC;QA7BC,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChF,cAAI;YAEF,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAG7D,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;QAG9B,CAAC,EACD,aAAG;YAED,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YAC7C,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,KAAI,CAAC,gBAAgB;gBAC9B,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAElB,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAIzB,CAAC;IAMD,8BAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACrC,OAAO,EAAE,aAAa;SACvB,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAzFU,SAAS;QAJrB,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;0FAkByC;YACf,sEAAe;YACrB,6EAAe,CAAe,yEAAc;YACrC,MAAuD;OApBvE,SAAS,CA2FrB;IAAD,CAAC;AAAA;SA3FY,SAAS,e","file":"13.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, MenuController, LoadingController } from 'ionic-angular';\n\nimport { UsuarioProvider } from '../../providers/providers';\nimport { MainPage } from '../pages';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { username: string, password: string } = {\n    username: 'pato1',\n    password: '123'\n  };\n\n  loading: any;\n  // Our translated text strings\n  private loginErrorString: string;\n\n\n  //private isLogged: boolean = false;\n\n\n  constructor(public navCtrl: NavController,\n    public usuarioProvider: UsuarioProvider,\n    public toastCtrl: ToastController, public menu: MenuController,\n    public translateService: TranslateService, public loadingCtrl: LoadingController) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n\n    /* \n        this.isLogged = localStorage.getItem(\"AUTENTHICATION\") == null;\n        console.log('HAY SESSION? ' + this.isLogged);\n        this.menu.enable(this.isLogged, 'idMainMenu');\n     */\n\n  }\n\n  ionViewDidEnter() {\n  //  this.menu.swipeEnable(false);\n  }\n\n  ionViewWillLeave() {\n   // this.menu.swipeEnable(true);\n\n  }\n\n\n  // Attempt to login in through our User service\n  doLogin() {\n\n\n    this.showLoader();\n\n    this.usuarioProvider.login(this.account.username, this.account.password).subscribe(\n      data => {\n\n        localStorage.setItem('AUTENTHICATION', JSON.stringify(data));\n\n\n        this.navCtrl.push(MainPage);\n\n\n      },\n      err => {\n\n        localStorage.setItem('AUTENTHICATION', null);\n        let toast = this.toastCtrl.create({\n          message: this.loginErrorString,\n          duration: 3000,\n          position: 'top'\n        });\n        toast.present();\n\n      }\n    );\n\n    this.loading.dismiss();\n\n    \n\n  }\n\n\n\n\n\n  showLoader() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Cargando...'\n    });\n\n    this.loading.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}